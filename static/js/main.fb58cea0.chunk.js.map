{"version":3,"sources":["index.js"],"names":["Square","props","winpos","winnerPos","onClick","className","indexOf","k","value","Board","temp","i","push","map","j","console","log","squares","renderSquare","Game","status","useState","Array","LEN","fill","latestCheck","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","selectedItem","setSelectedItem","sortBy","setSortBy","setWinnerPos","handleSelectItem","step","current","winner","calculateWinner","moves","move","desc","toString","length","historyTemp","slice","concat","Math","floor","handleClick","reverse","lines","t","t1","t2","flag","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb58cea0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst LEN = 5;\n\nfunction Square(props) {\n  const winpos = props.winnerPos\n  return (\n    <button onClick={props.onClick} className={winpos.indexOf(props.k) !== -1  ? \"square win\" : \"square\" }>\n      {props.value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  const renderSquare = (i) => {\n    console.log(i);\n    return (\n      <Square\n        key={i}\n        k ={i}\n        winnerPos={props.winnerPos}\n        value={props.squares[i]}\n        onClick={() => props.onClick(i)}\n      />\n    );\n  }\n\n  const temp = [];\n  for(let i=0;i<LEN;i++)\n  {\n    temp.push(i);\n  }\n\n\n  return (\n    <div>\n      {\n        temp.map(i =>\n        (\n          <div key={i + \"abc\"} className=\"board-row\">\n            {\n              temp.map(j => renderSquare(LEN * i + j))\n            }\n          </div>\n        )\n        )\n      }\n    </div>\n  );\n}\n\nfunction Game(props) {\n\n  const [history, setHistory] = useState([\n    {\n      squares: Array(LEN*LEN).fill(null),\n      latestCheck:[]\n      \n    }\n  ])\n\n  const [stepNumber, setStepNumber] = useState(0)\n  const [xIsNext, setXIsNext] = useState(true)\n  const [selectedItem, setSelectedItem] = useState(0)\n  const [sortBy, setSortBy] = useState(true);\n  const [winnerPos, setWinnerPos] = useState([])\n\n  const handleClickSortBy = () => {\n    setSortBy(!sortBy)\n  }\n\n  const handleClick = (i) => {\n    const historyTemp = history.slice(0, stepNumber + 1);\n    const current = historyTemp[historyTemp.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    setHistory(historyTemp.concat([\n      {\n        squares: squares,\n        latestCheck: [i%LEN, Math.floor(i/LEN)],\n        winnerPos: []\n      }\n    ]))\n    setStepNumber(historyTemp.length);\n    setXIsNext(!xIsNext)\n    setSelectedItem(selectedItem+1)\n    \n  }\n\n  const jumpTo = (step) => {\n    setStepNumber(step);\n    setXIsNext((step % 2) === 0)\n  }\n\n  const handleSelectItem = (i) => {\n    jumpTo(i);\n    setSelectedItem(i);\n    setWinnerPos([]);\n  }\n\n  const current = history[stepNumber];\n  const winner = calculateWinner(current.squares);\n\n\n  const moves = history.map((step, move) => {\n    const desc = move ?\n      'Go to move #' + move + \". Position :(\" + step.latestCheck.toString() + \")\":\n      'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => { handleSelectItem(move) }} className={selectedItem === move ? \"bold-text\" : \"\"}>{desc}</button>\n      </li>\n    );\n  });\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner[0];\n    if(winnerPos.length===0)\n    {\n      setWinnerPos(winner[1]);\n    }\n  } else {\n    if(history.length<=LEN) status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n    else status = \"The game result is a draw \";\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board\n          squares={current.squares}\n          winnerPos= {winnerPos}\n          onClick={i => handleClick(i)}\n        />\n      </div>\n      <div className=\"game-info\">\n        <button onClick={handleClickSortBy}>{sortBy ? \"Ascending\" : \"Descending\"}</button>\n        <div>{status}</div>\n        <ol>{sortBy ? moves : moves.reverse()}</ol>\n      </div>\n    </div>\n  );\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner (squares) {\n  const lines = [];\n  for(let i=0;i<LEN;i++)\n  {\n    let t = [];\n    for(let j=0;j<LEN;j++)\n    {\n      t.push(i*LEN+j);\n    }\n    lines.push(t)\n  }\n\n  for(let i=0;i<LEN;i++)\n  {\n    let t = [];\n    for(let j=0;j<LEN;j++)\n    {\n      t.push(j*LEN+i);\n    }\n    lines.push(t)\n  }\n\n  let t1 =[]\n  let t2 = []\n  for(let i=0;i<LEN;i++)\n  {\n    t1.push(i*(LEN+1))\n    t2.push((i+1)*(LEN-1))\n  }\n\n  lines.push(t1);\n  lines.push(t2);\n  console.log(lines);\n\n\n\n  for (let i = 0; i < lines.length; i++) {\n\n    let flag =0;\n    for(let j = 0;j <LEN; j++ )\n    {\n      if(j===0)\n      {\n        if (!squares[lines[i][0]]) flag=1;\n      }\n      else{\n        if (squares[lines[i][0]] !== squares[lines[i][j]]) flag=1;\n      }\n    }\n\n    if(flag===0){\n      return [squares[lines[i][0]],lines[i]];\n    }\n    // if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      \n    //   return [squares[a],lines[i]];\n    // }\n  }\n  return null;\n}\n"],"sourceRoot":""}